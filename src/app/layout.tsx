import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import "../styles/jcrop.css";
import CssBaseline from '@mui/material/CssBaseline';
import { ThemeProvider } from '../contexts/ThemeContext';
import { PlanetaryDataProvider } from '@/contexts/PlanetaryDataContext';
import { LegalProvider } from '@/contexts/LegalContent';
import Chatbot from '@/components/Chatbot';
import { GoogleOAuthProvider } from '@react-oauth/google';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Brahma Vastu",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Select Client ID based on environment
  const env = process.env.NODE_ENV || 'development';
  const googleClientId =
    env === 'production'
      ? process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID_PROD || ''
      : process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID_DEV || '';

  // Debug log to verify Client ID
  console.log('Environment:', env);
  console.log('Google Client ID:', googleClientId ? 'Configured' : 'Missing');

  if (!googleClientId) {
    console.warn('Warning: Google Client ID is missing. Google OAuth will be disabled. Please configure your .env.local file.');
  }

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {googleClientId ? (
          <GoogleOAuthProvider clientId={googleClientId}>
            <ThemeProvider>
              <CssBaseline />
              <PlanetaryDataProvider>
                <LegalProvider>
                  {children}
                  <Chatbot />
                </LegalProvider>
              </PlanetaryDataProvider>
            </ThemeProvider>
          </GoogleOAuthProvider>
        ) : (
          <ThemeProvider>
            <CssBaseline />
            <PlanetaryDataProvider>
              <LegalProvider>
                {children}
                <Chatbot />
              </LegalProvider>
            </PlanetaryDataProvider>
          </ThemeProvider>
        )}
      </body>
    </html>
  );
}